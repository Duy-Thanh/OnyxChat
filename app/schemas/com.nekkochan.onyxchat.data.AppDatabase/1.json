{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "165c6c2bddde23a57002d365d0455bb0",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`onionAddress` TEXT NOT NULL, `displayName` TEXT, `profilePicture` TEXT, `publicKey` TEXT, `lastSeen` INTEGER NOT NULL, `isCurrentUser` INTEGER NOT NULL, PRIMARY KEY(`onionAddress`))",
        "fields": [
          {
            "fieldPath": "onionAddress",
            "columnName": "onionAddress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profilePicture",
            "columnName": "profilePicture",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publicKey",
            "columnName": "publicKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastSeen",
            "columnName": "lastSeen",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCurrentUser",
            "columnName": "isCurrentUser",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "onionAddress"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "messages",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `senderId` TEXT NOT NULL, `recipientId` TEXT NOT NULL, `encryptedContent` TEXT NOT NULL, `mediaUrl` TEXT, `mediaType` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, `expirationTime` INTEGER NOT NULL, `isRead` INTEGER NOT NULL, `isDeleted` INTEGER NOT NULL, `isSent` INTEGER NOT NULL, `replyToMessageId` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "senderId",
            "columnName": "senderId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "recipientId",
            "columnName": "recipientId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "encryptedContent",
            "columnName": "encryptedContent",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mediaUrl",
            "columnName": "mediaUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mediaType",
            "columnName": "mediaType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expirationTime",
            "columnName": "expirationTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isRead",
            "columnName": "isRead",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDeleted",
            "columnName": "isDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSent",
            "columnName": "isSent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replyToMessageId",
            "columnName": "replyToMessageId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_messages_senderId",
            "unique": false,
            "columnNames": [
              "senderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_senderId` ON `${TABLE_NAME}` (`senderId`)"
          },
          {
            "name": "index_messages_recipientId",
            "unique": false,
            "columnNames": [
              "recipientId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_recipientId` ON `${TABLE_NAME}` (`recipientId`)"
          },
          {
            "name": "index_messages_timestamp",
            "unique": false,
            "columnNames": [
              "timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_timestamp` ON `${TABLE_NAME}` (`timestamp`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "contacts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ownerAddress` TEXT NOT NULL, `contactAddress` TEXT NOT NULL, `nickName` TEXT, `isBlocked` INTEGER NOT NULL, `isVerified` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `lastInteractionTime` INTEGER NOT NULL, FOREIGN KEY(`contactAddress`) REFERENCES `users`(`onionAddress`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`ownerAddress`) REFERENCES `users`(`onionAddress`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerAddress",
            "columnName": "ownerAddress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contactAddress",
            "columnName": "contactAddress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nickName",
            "columnName": "nickName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isBlocked",
            "columnName": "isBlocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVerified",
            "columnName": "isVerified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastInteractionTime",
            "columnName": "lastInteractionTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_contacts_contactAddress",
            "unique": false,
            "columnNames": [
              "contactAddress"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_contactAddress` ON `${TABLE_NAME}` (`contactAddress`)"
          },
          {
            "name": "index_contacts_ownerAddress",
            "unique": false,
            "columnNames": [
              "ownerAddress"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_ownerAddress` ON `${TABLE_NAME}` (`ownerAddress`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "contactAddress"
            ],
            "referencedColumns": [
              "onionAddress"
            ]
          },
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "ownerAddress"
            ],
            "referencedColumns": [
              "onionAddress"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '165c6c2bddde23a57002d365d0455bb0')"
    ]
  }
}